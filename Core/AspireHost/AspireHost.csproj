<Project Sdk="Microsoft.NET.Sdk">

  <Sdk Name="Aspire.AppHost.Sdk" Version="9.0.0" />

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsAspireHost>true</IsAspireHost>
    <UserSecretsId>538a2289-56f1-4a0b-a444-9fb4c2eece31</UserSecretsId>
	<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	<DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Aspire.Hosting.AppHost" Version="9.1.0" />
    <PackageReference Include="Aspire.Hosting.NodeJs" Version="9.1.0" />
    <PackageReference Include="Aspire.Hosting.Seq" Version="9.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Api\Api.csproj" />
  </ItemGroup>
	

  <!-- Install npm packages if node_modules is missing -->
  <Target Name="RestoreNpm" BeforeTargets="Build" Condition=" '$(DesignTimeBuild)' != 'true' ">
	<ItemGroup>
		<PackageJsons Include="..\..\UserInterfaces\client-websocket\package.json" />
		<PackageJsons Include="..\..\UserInterfaces\client-sender\package.json" />
		<PackageJsons Include="..\..\UserInterfaces\client-recent-messages\package.json" />
	</ItemGroup>
	<Message Importance="high" Text="Installing npm packages for %(PackageJsons.RelativeDir)" Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)node_modules')" />
	<Exec Command="npm install" WorkingDirectory="%(PackageJsons.RootDir)%(PackageJsons.Directory)" Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)node_modules')" />
  </Target>


</Project>
